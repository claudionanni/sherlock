#!/usr/bin/python3

#SHERLOCK © 2020 - Claudio Nanni

# Module Imports
import mariadb
import sys
import os
import time
import json
import requests
from datetime import datetime
import argparse

print("\n\nSHERLOCK - Command Dumper ©2020 By Claudio The Nanni")

parser = argparse.ArgumentParser(prog='shock',description='Dumps SHERLOCK commands from DB to JSON')
parser.add_argument('-H','--host', metavar='<hostname or ip>',default='127.0.0.1',help='Hostname or ip of the MariaDB instance')
parser.add_argument('-P','--port', metavar='<port>',default='3306',help='Port the MariaDB instance')
parser.add_argument('-u','--user', metavar='<user>',default='root',help='User of the MariaDB instance')
parser.add_argument('-p','--password', metavar='<password>',default='',help='Password of the MariaDB instance')
parser.add_argument('-e','--export', action='store_true',default='',help='Export commands to the json commands file')
parser.add_argument('-a','--add-command', metavar='<command row>',default='',help='Add one command in the format: cmd_id,cmd_type,cmd_usertype,cmd_text,cmd_description,cmd_status')
args = parser.parse_args()



def dump_commands_from_db():
   # For database management of commands, periodically they can be exported from the database (if mantained there) and dumped to json file that should be then uploaded to github
   listCommands={}

   try:
      conn = mariadb.connect(
      user=args.user,
      password=args.password,
      host=args.host,
      database="sherlock",
      port=int(args.port))
   except mariadb.Error as e:
      print(f"Error connecting to MariaDB Platform: {e}")
      sys.exit(1)
   cur = conn.cursor();
   print("Loading commands...")
   cur.execute("SELECT ID,TYPE,USER_TYPE,COMMAND,DESCRIPTION FROM sherlock_cmd s LEFT join commands_validation c ON s.id=c.cmdid  WHERE c.status='VALID' ORDER BY type desc,cast(substring(ID,2) as unsigned)" )
   for (ID,TYPE,USER_TYPE,COMMAND,DESCRIPTION) in cur:
        listCommands[ID]=[TYPE,USER_TYPE,COMMAND,DESCRIPTION]
   print("Writing commands to json file...")
   with open('./sherlock_cmd.json', 'w') as fp:
       json.dump(listCommands, fp,indent=4)

if(args.export):
    dump_commands_from_db()
